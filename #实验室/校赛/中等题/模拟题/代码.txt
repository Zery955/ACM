#include <iostream>
#include <stack>
#include <list>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <bitset>
#include <vector>
#include <map>
#include <queue>
#include <cmath>
#include <set>
using namespace std;
//************************************
typedef unsigned long long ull;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<long long, long long> pll;
typedef pair<double, double> pdd;
typedef bitset<100> BIT;
const double eps = 1e-10;
template<typename T> void read(T &x){
    int f = 1;x = 0;char s = getchar();
    while(s < '0'|| s > '9'){if(s == '-') f = -1; s = getchar();}
    while(s >= '0' && s <= '9'){x = x * 10 + s - '0'; s = getchar();}
    x *= f;
}
template<typename T> void print(T x){
    if(x < 0)putchar('-'),x = -x;
    if(x > 9) print(x / 10);
    putchar(x % 10 + '0');
}
template<typename T> void println(T x){
    if(x < 0)putchar('-'),x = -x;
    if(x > 9) print(x / 10);
    putchar(x % 10 + '0');
    putchar('\n');
}
template<typename T, typename ... Args> void read(T &x, Args& ... args){read(x);read(args ...);}
inline void reads(char *a){scanf("%s", a);}
template<typename ... Args>void reads(char* a, Args* ... args){scanf("%s", a); reads(args...);}
template<typename T, typename ... Args>void print(T x, Args ... args){print(x); putchar(' '); print(args...);}
template<typename T, typename ... Args> void println(T x, Args ... args){print(x); putchar(' '); println(args...);}
inline void prints(char *a){printf("%s", a);}
template<typename T> inline T sqr(T x){return x * x;}
template<typename T> inline T random(T R){return (double)rand() / RAND_MAX * R + ((T)0.5 == 0 ? 0.5 : 0.0);}
template<typename T> inline T random(T L, T R){return random(R - L) + L;}
ll ksm(ll a, ll k, ll Mod){ll res = 1; while(k){if(k & 1) (res *= a) %= Mod; (a *= a) %= Mod; k >>= 1;} return res % Mod;}
inline ll inv(ll a, ll Mod){return ksm(a, Mod - 2, Mod);}
inline void cap_bit(ll x){ for(int i = 63; i >= 0; --i)if(x >> i & 1) {printf("Need (%d) = %lld\n", i + 1, 1LL << (i + 1)); return;}}
inline void cal_space(ll x){printf("%lld MB\n" ,x >> 20);}
const int dx4[] = {0, 0, -1, 1};
const int dy4[] = {-1, 1, 0, 0};
const int dx6[] = {1, -1, 0, 0, 0, 0};
const int dy6[] = {0, 0, 1, -1, 0, 0};
const int dz6[] = {0, 0, 0, 0, 1, -1};
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define nbsp putchar(' ')
#define br puts("")
#define pi acos(-1.0)
#define gcd(x, y) __gcd(x, y)
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define xx first
#define yy second
#define lowbit(x) (x) & (-x)
const int N = 6e6 + 5;
const int M = 35;
const ll Mod = 998244353;
const ll INF = 1e16;
//************************************
int mx[2 * 200 * 4000][2], T, n, k, tn;
inline int get(int i, int j, int n, int m)
{
    return (i - 1) * m + j;
}
void sovle(int n, int m, int f)
{
    if(n == tn)
    {
        for(int i = 1; i <= n * m; ++ i) printf("%d%c", mx[get(1, i, n, m)][f], i == n * m ? '\n' : ' ');
        return;
    }
    int nn = n / 2, mm = m * 2;
    for(int i = n / 2 + 1; i <= n; ++ i)
        for(int j = 1; j <= m; ++ j)
            mx[get(i - n / 2, j + m, nn, mm)][f ^ 1] = mx[get(i, j, n, m)][f];
    for(int i = 1; i <= n / 2; ++ i)
        for(int j = 1; j <= m; ++ j)
            mx[get(n / 2 - i + 1, m - j + 1, nn, mm)][f ^ 1] = mx[get(i, j, n, m)][f];
    sovle(nn, mm, f ^ 1);
}
int main()
{
    read(T);
    while(T -- )
    {
        read(n, k);
        tn = n * 2;
        int tot = 2 * n;
        for(int i = 1; i <= k; ++ i) tot *= 2;
        for(int i = 1; i <= tot; ++ i) read(mx[get(i, 1, tot, 1)][0]);
        sovle(tot, 1, 0);
    }
    return 0;
}