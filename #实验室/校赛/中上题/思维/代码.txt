//#pragma GCC optimize(2)
#include <iostream>
#include <stack>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <bitset>
#include <vector>
#include <map>
#include <queue>
#include <cmath>
#include <set>
using namespace std;
//************************************
typedef unsigned long long ull;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<long long, long long> pll;
typedef pair<double, double> pdd;
typedef bitset<100> BIT;
const double eps = 1e-10;
template<typename T> void read(T &x){
    int f = 1;x = 0;char s = getchar();
    while(s < '0'|| s > '9'){if(s == '-') f = -1; s = getchar();}
    while(s >= '0' && s <= '9'){x = x * 10 + s - '0'; s = getchar();}
    x *= f;
}
template<typename T> void print(T x){
    if(x < 0)putchar('-'),x = -x;
    if(x > 9) print(x / 10);
    putchar(x % 10 + '0');
}
template<typename T> void println(T x){
    if(x < 0)putchar('-'),x = -x;
    if(x > 9) print(x / 10);
    putchar(x % 10 + '0');
	putchar('\n');
}
template<typename T, typename ... Args> void read(T &x, Args& ... args){read(x);read(args ...);} 
inline void reads(char *a){scanf("%s", a);}
template<typename ... Args>void reads(char* a, Args* ... args){scanf("%s", a); reads(args...);}
template<typename T, typename ... Args>void print(T x, Args ... args){print(x); putchar(' '); print(args...);}
template<typename T, typename ... Args> void println(T x, Args ... args){print(x); putchar(' '); println(args...);}
inline void prints(char *a){printf("%s", a);}
template<typename T> inline T sqr(T x){return x * x;}
template<typename T> inline T random(T R){return (double)rand() / RAND_MAX * R + ((T)0.5 == 0 ? 0.5 : 0.0);}
template<typename T> inline T random(T L, T R){return random(R - L) + L;}
ll ksm(ll a, ll k, ll Mod){ll res = 1; while(k){if(k & 1) (res *= a) %= Mod; (a *= a) %= Mod; k >>= 1;} return res % Mod;}
inline ll inv(ll a, ll Mod){return ksm(a, Mod - 2, Mod);}
inline void cap_bit(ll x){ for(int i = 63; i >= 0; --i)if(x >> i & 1) {printf("Need (%d) = %lld\n", i + 1, 1LL << (i + 1)); return;}}
inline void cal_space(ll x){printf("%lld MB\n" ,x >> 20);}
const int dx4[] = {0, 0, -1, 1};
const int dy4[] = {-1, 1, 0, 0};
const int dx6[] = {1, -1, 0, 0, 0, 0};
const int dy6[] = {0, 0, 1, -1, 0, 0};
const int dz6[] = {0, 0, 0, 0, 1, -1};
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define nbsp putchar(' ')
#define br puts("")
#define pi acos(-1.0)
#define gcd(x, y) __gcd(x, y)
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define xx first
#define yy second
#define lowbit(x) (x) & (-x)
const int N = 1e5 + 5;
const int M = 1e4 + 5;
const ll Mod = 1e9 + 7;
const ll INF = 0x3f3f3f3f;	
//************************************
ll T;
ll n, m, k;
struct node{
	ll s, a[6];
}mw[N], sw[N];
int main()
{
	read(T);
	while(T --)
	{
		read(n, m, k);
		for(int i = 1; i <= n; ++ i)
		{
			read(mw[i].s);
			for(int j = 0; j < k; ++ j) read(mw[i].a[j]);
		}
		for(int i = 1; i <= m; ++ i)
		{
			read(sw[i].s);
			for(int j = 0; j < k; ++ j) read(sw[i].a[j]);
		}
		ll ans = -0x3f3f3f3f3f3f3f3f;
		for(int S = 0; S < (1 << k); ++ S)
		{
			ll x = -0x3f3f3f3f3f3f3f3f;
			ll y = x;
			for(int i = 1; i <= n; ++ i)
			{
				ll cur = mw[i].s;
				for(int j = 0; j < k; ++ j) if(S >> j & 1) cur += mw[i].a[j];
				else cur -= mw[i].a[j];
				x = max(x, cur);
			}
			for(int i = 1; i <= m; ++ i)
			{
				ll cur = sw[i].s;
				for(int j = 0; j < k; ++ j) if(!(S >> j & 1)) cur += sw[i].a[j];
				else cur -= sw[i].a[j];
				y = max(y, cur);
			}
			ans = max(x + y, ans);
		}
		println(ans);
	}
    return 0;
}
