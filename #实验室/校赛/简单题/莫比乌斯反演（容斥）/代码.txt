#include<bits/stdc++.h>
#include <iostream>
#include <stack>
#include <list>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <bitset>
#include <vector>
#include <map>
#include <queue>
#include <cmath>
#include <set>
using namespace std;
//************************************
typedef unsigned long long ull;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<long long, long long> pll;
typedef pair<double, double> pdd;
typedef bitset<100> BIT;
const double eps = 1e-10;
template<typename T> void read(T &x){
    int f = 1;x = 0;char s = getchar();
    while(s < '0'|| s > '9'){if(s == '-') f = -1; s = getchar();}
    while(s >= '0' && s <= '9'){x = x * 10 + s - '0'; s = getchar();}
    x *= f;
}
template<typename T> void print(T x){
    if(x < 0)putchar('-'),x = -x;
    if(x > 9) print(x / 10);
    putchar(x % 10 + '0');
}
template<typename T> void println(T x){
    if(x < 0)putchar('-'),x = -x;
    if(x > 9) print(x / 10);
    putchar(x % 10 + '0');
    putchar('\n');
}
template<typename T, typename ... Args> void read(T &x, Args& ... args){read(x);read(args ...);}
inline void reads(char *a){scanf("%s", a);}
template<typename ... Args>void reads(char* a, Args* ... args){scanf("%s", a); reads(args...);}
template<typename T, typename ... Args>void print(T x, Args ... args){print(x); putchar(' '); print(args...);}
template<typename T, typename ... Args> void println(T x, Args ... args){print(x); putchar(' '); println(args...);}
inline void prints(char *a){printf("%s", a);}
template<typename T> inline T sqr(T x){return x * x;}
template<typename T> inline T random(T R){return (double)rand() / RAND_MAX * R + ((T)0.5 == 0 ? 0.5 : 0.0);}
template<typename T> inline T random(T L, T R){return random(R - L) + L;}
ll ksm(ll a, ll k, ll Mod){ll res = 1; while(k){if(k & 1) (res *= a) %= Mod; (a *= a) %= Mod; k >>= 1;} return res % Mod;}
inline ll inv(ll a, ll Mod){return ksm(a, Mod - 2, Mod);}
inline void cap_bit(ll x){ for(int i = 63; i >= 0; --i)if(x >> i & 1) {printf("Need (%d) = %lld\n", i + 1, 1LL << (i + 1)); return;}}
inline void cal_space(ll x){printf("%lld MB\n" ,x >> 20);}
const int dx[] = {1, -1, 0, 0, 0, 0};
const int dy[] = {0, 0, 1, -1, 0, 0};
const int dz[] = {0, 0, 0, 0, 1, -1};
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define nbsp putchar(' ')
#define br puts("")
#define pi acos(-1.0)
#define gcd(x, y) __gcd(x, y)
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define xx first
#define yy second
#define lowbit(x) (x) & (-x)
#define mem(x) memset(x, 0, sizeof x)
const int N = 1e6 + 5;
const int M = 35;
ll Mod =  1e9 + 7; 
const ll INF = 1e16;
//************************************
namespace Mu{
	const int N = 1e6 + 5;
	int mu[N];
	int st[N];
	vector<int> primes;
	void init()
	{
		primes.clear();
		memset(mu, 0, sizeof mu);
		memset(st, 0, sizeof st);
		mu[1] = 1;
		for(int i = 2; i < N; ++ i)
		{
			if(st[i] == 0)
			{
				st[i] = i;
				primes.push_back(i);
				mu[i] = -1;
			}
			for(ll j : primes)
			{
				if(j * i >= N) break;
				st[j * i] = j;
				if(i % j == 0) break;
				else mu[j * i] = - mu[i];
			}
		}
	}

}
int main()
{
	ll T;
	read(T);
	Mu :: init();
	while(T -- )
	{
		ll n, m;
		read(n, m);
		ll ans = 0;
		for(ll i = 1; i <= min(n, m); ++ i)
		{
			ans += Mu :: mu[i] * ((n / i) * (m / i));
		}
		println(ans);
	}
    return 0;
}
