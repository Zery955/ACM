namespace Gauss{
	const int N = 105;//未知数个数上限
	const double EPS = 1e-8;//精度
	double mat[N][N + 1];
	int n;// 未知数个数
	bool flag; //是否有解
	void init(int _n){
		n = _n;
		flag = 1;
	}
	inline void set(int x, int y, double val){ mat[x][y] = val;}
	void gauss(){
		for(int r = 1, c = 1;  r <= n; ++ r, ++ c)
		{
			int t = r;
			for(int i = r + 1; i <= n; ++i)
			{
				if(fabs(mat[i][c]) > fabs(mat[t][c])) t = i;
			}
			for(int i = c; i <= n + 1; ++i) swap(mat[r][i], mat[t][i]);
			
			if(fabs(mat[r][c]) < EPS)
			{
				flag = 0;
				return;
			}
			for(int i = n + 1; i >= c; --i) mat[r][i] /= mat[r][c];
			
			for(int i = r + 1; i <= n; ++i)
				for(int j = n + 1; j >= c; --j)
					mat[i][j] -= mat[i][c]  * mat[r][j];
		}
		for(int i = n; i > 1; --i)
		{
			for(int j = i - 1; j; --j)
			{
				mat[j][n + 1] -= mat[i][n + 1] * mat[j][i];
				mat[j][i] = 0.0;
			}
		}
	}
}