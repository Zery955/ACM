namespace MST{
	const int N = 1e3 + 5;
	typedef long long Data;
	const Data inf = 1e16; 
	int n;
	Data ch[N][N];
	Data dis[N];
	bool vis[N];
	void init(int _n)
	{
		n = _n;
		for(int i = 0; i <= n; ++i)
			for(int j = 0; j <= n; ++j)
			{
				ch[i][j] = inf;
			}
	}
	void addedge(int u, int v, Data c)
	{
		ch[u][v] = min(ch[u][v], c);
		ch[v][u] = min(ch[v][u], c);
	}
	Data prim()
	{
		Data res = 0.0;
		for(int i = 0; i <= n; ++i) dis[i] = inf;
		memset(vis, 0, sizeof vis);
		dis[1] = 0;
		for(int i = 1; i <= n; ++i)
		{
			int u = 0;
			for(int j = 1; j <= n; ++j) 
				if(vis[j] == 0 && (u == 0 || dis[j] < dis[u])) u = j;
			vis[u] = 1;
			res += dis[u];
			for(int v = 1; v <= n; ++v) 
				if(vis[v] == 0 && dis[v] > ch[u][v])
				dis[v] = ch[u][v];
		}
		return res;
	}
	
}