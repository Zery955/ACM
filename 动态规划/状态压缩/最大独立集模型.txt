namespace Independent{
    const int N = 26;
    int ch[N + 1];
    char dp[1 << N], Log[1 << N];//½ÚÊ¡¿Õ¼ä
    int n;
    void init(int _n)
    {
        n = _n;
        dp[0] = 0;
        for(int i = 0; i <= n; ++i)
        {
            Log[1 << i] = i;
            ch[i] = 0;
        }
    }
    inline void addedge(int u, int v){ ch[u] |= 1 << v; }
    int cal()
    {
        int res = 0;
        for(int i = 1; i < (1 << n); ++i)
        {
            int l = lowbit(i), u = Log[l];
            dp[i] = max(dp[i - l], (char)(dp[(i - l) - (i & ch[u])] + 1));
            res += (int)dp[i];
        }
        return res;
    }
}